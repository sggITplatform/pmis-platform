<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright (c) 2014 jon -->

<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<!-- <resources mapping="/images/**" location="/images/" /> <resources mapping="/css/**" 
		location="/css/" /> <resources mapping="/js/**" location="/js/" /> <resources 
		mapping="/html/**" location="/html/" /> <resources mapping="/common/**" location="/common/" 
		/> -->

	<!--自动扫描com.szewec.ssdp.*.controller 包下的@Controller标注的类控制器类 -->
	<context:component-scan
		base-package="com.szewec.ssdp.*.controller,com.szewec.ssdp.framework.core.controller" />
	<!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<annotation-driven></annotation-driven>
	<!--对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<beans:property name="prefix" value="/WEB-INF/view/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 上传文件 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf-8"></beans:property>
		<beans:property name="maxUploadSize" value="60485760"></beans:property>
	</beans:bean>
	<!-- 国际化资源文件 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="i18n/messages"></beans:property>
	</beans:bean>

	<beans:bean name="captchaProducers"
		class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<beans:property name="config">
			<beans:bean class="com.google.code.kaptcha.util.Config">
				<beans:constructor-arg>
					<beans:props>
						<beans:prop key="kaptcha.image.width">110</beans:prop>
						<beans:prop key="kaptcha.image.height">38</beans:prop>
						<!--自己调整-->
						<beans:prop key="kaptcha.textproducer.font.size">33</beans:prop>
						<beans:prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</beans:prop>
						<beans:prop key="kaptcha.textproducer.char.string">0123456789qwertyuiopasdfghjklzxcvbnm</beans:prop>
						<beans:prop key="kaptcha.textproducer.char.length">4</beans:prop>
					</beans:props>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
	</beans:bean>
	<!-- <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha"> 
		<property name="config"> <bean class="com.google.code.kaptcha.util.Config"> 
		<constructor-arg> <props> <prop key="kaptcha.border">no</prop> <prop key="kaptcha.border.color">105,179,90</prop> 
		<prop key="kaptcha.textproducer.font.color">red</prop> <prop key="kaptcha.image.width">250</prop> 
		<prop key="kaptcha.textproducer.font.size">90</prop> <prop key="kaptcha.image.height">90</prop> 
		<prop key="kaptcha.session.key">code</prop> <prop key="kaptcha.textproducer.char.length">4</prop> 
		<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop> </props> </constructor-arg> 
		</bean> </property> </bean> -->

	<!--Web异常解析处理 -->
	<beans:bean class="com.szewec.ssdp.exception.controller.RdpHandlerExceptionResolver">
		<beans:property name="order" value="0" />
		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<beans:property name="defaultErrorView" value="resource:error" />
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<beans:property name="exceptionAttribute" value="ex" />
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<beans:property name="exceptionMappings">
			<util:map>
				<beans:entry key="com.szewec.ssdp.exception.controller.JsonResponseException"
					value="resource:/view/error/pageError" />
				<beans:entry key="org.springframework.validation.BindException"
					value="resource:/view/error/pageError" />
			</util:map>
		</beans:property>
	</beans:bean>

	<!--启动Spring MVC的注解功能,设置编码方式，防止乱码 -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!--完成json自动转换的映射  -->
	<beans:bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>
	<beans:bean id="formHttpMessageConverter"
		class="org.springframework.http.converter.FormHttpMessageConverter" />
	<beans:bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<beans:bean id="marshallerHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<beans:property name="marshaller" ref="rdpShaller" />
		<beans:property name="unmarshaller" ref="rdpShaller" />
	</beans:bean>
	
	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="mappingJacksonHttpMessageConverter" />
				<beans:ref bean="stringHttpMessageConverter" />
				<beans:ref bean="marshallerHttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- spring rest -->
	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order" value="1" />
		<beans:property name="defaultContentType" value="text/html" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="json" value="application/json" />
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<!-- for application/json -->
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<beans:property name="objectMapper" ref="rdpMapper" />
				</beans:bean>
				<!-- for application/xml -->
				<beans:bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<beans:property name="marshaller" ref="rdpShaller" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 重新设置 objectMapper -->
	<beans:bean id="rdpMapper" class="org.codehaus.jackson.map.ObjectMapper">
		<!-- 设置objectMapper的serializationConfig的serializationInclusion属性，以忽略null对象 -->
		<beans:property name="serializationConfig.serializationInclusion">
			<beans:value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- 重新设置 marshaller -->
	<beans:bean id="rdpShaller" name="rdpShaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<beans:property name="validating" value="false" />
	</beans:bean>
</beans:beans>